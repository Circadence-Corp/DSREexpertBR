{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "builtinAdministratorAccount": {
      "type": "string",
      "defaultValue": "ContosoAdmin",
      "metadata": {
        "description": "Builtin\\Administrator account's name for the Virtual Machines. This is not a domain account."
      }
    },
    "builtinAdministratorPassword": {
      "type": "securestring",
      "defaultValue": "Password123!@#",
      "metadata": {
        "description": "Password for the Builtin Administrator account. Default is 'Password123!@#'"
      }
    },
    "UserPrincipalName": {
      "type": "string",
      "defaultValue": "seccxp.ninja",
      "metadata": {
        "description": "The UPN for users who will be provisioned in Active Directory.  Useful when later using AAD Connect"
      }
    },
    "DomainName": {
      "type": "string",
      "defaultValue": "Contoso.Azure",
      "metadata": {
        "description": "This is the FQDN of the Active Directory domain"
      }
    },
    "NetBiosName": {
      "type": "string",
      "defaultValue": "CONTOSO",
      "metadata": {
        "description:": "NetBIOS name for the Forest"
      }
    },
    "JeffLPassword": {
      "type": "securestring",
      "defaultValue": "Password$fun",
      "metadata": {
        "description": "Password for JeffL. Default is 'Password$fun'  JeffL is admin on VictimPC (but no other domain credentials)."
      }
    },
    "SamiraAPassword": {
      "type": "securestring",
      "defaultValue": "NinjaCat123!@#",
      "metadata": {
        "description": "SamiraA password. Default is 'NinjaCat123!@#'  SamiraA is Domain Admin."
      }
    },
    "RonHdPassword": {
      "type": "securestring",
      "defaultValue": "FightingTiger$",
      "metadata": {
        "description": "RonHD's password. Default is FightingTiger$. RonHD is member of Helpdesk."
      }
    },
    "LisaVPassword": {
      "type": "securestring",
      "defaultValue": "HighImpactUser1!",
      "metadata": {
        "description": "LisaV's password. By default it is 'HighImpactUser1!'  LisaV has access to High Impact data and will be used in future labs."
      }
    },
    "ElsieMPassword": {
      "type": "securestring",
      "defaultValue": "Els13M@#",
      "metadata": {
        "description": "ElsieM's password. By default it is 'Els13M@#'  ElsieM is admin on IntWkst01 (but no other domain credentials)."
      }
    },    
    "KerriMPassword": {
      "type": "securestring",
      "defaultValue": "K3RRiM@#245$$*^",
      "metadata": {
        "description": "KerriM's password. By default it is 'K3RRiM@#245$$*^'  KerriM is admin on IntWkst02 (but no other domain credentials)."
      }
    },    
    "MuhammedOPassword": {
      "type": "securestring",
      "defaultValue": "Mo3454hamm#$9",
      "metadata": {
        "description": "MuhammedO's password. By default it is 'Mo3454hamm#$9'  MuhammedO is admin on IntWkst03 (but no other domain credentials)."
      }
    },    
    "YasminWPassword": {
      "type": "securestring",
      "defaultValue": "Y44Min098&^%%",
      "metadata": {
        "description": "YasminW's password. By default it is 'Y44Min098&^%%'  YasminW is admin on IntWkst04 (but no other domain credentials)."
      }
    },    
    "StefanMPassword": {
      "type": "securestring",
      "defaultValue": "5T3fan(*&#^22",
      "metadata": {
        "description": "StefanM's password. By default it is '5T3fan(*&#^22'  StefanM is admin on IntWkst05 (but no other domain credentials)."
      }
    },    
    "PascalRPassword": {
      "type": "securestring",
      "defaultValue": "P45cali**&323",
      "metadata": {
        "description": "PascalR's password. By default it is 'P45cali**&323'  PascalR is admin on IntWkst06 (but no other domain credentials)."
      }
    },    
    "NolaMPassword": {
      "type": "securestring",
      "defaultValue": "N0la4NN847*&^@",
      "metadata": {
        "description": "NolaM's password. By default it is 'N0la4NN847*&^@'  NolaM is admin on IntWkst07 (but no other domain credentials)."
      }
    },    
    "RaifeDPassword": {
      "type": "securestring",
      "defaultValue": "R4IDdF3884&&^^)",
      "metadata": {
        "description": "RaifeD's password. By default it is 'R4IDdF3884&&^^)'  RaifeD is admin on IntWkst08 (but no other domain credentials)."
      }
    },    
    "LillianaDPassword": {
      "type": "securestring",
      "defaultValue": "7177IAN$(@#&++12art",
      "metadata": {
        "description": "LillianaD's password. By default it is '7177IAN$(@#&++12art'  LillianaD is admin on IntWkst09 (but no other domain credentials)."
      }
    },    
    "KarinaMPassword": {
      "type": "securestring",
      "defaultValue": "K4r1N99*#",
      "metadata": {
        "description": "KarinaM's password. By default it is 'K4r1N99*#'  KarinaM is admin on IntWkst10 (but no other domain credentials)."
      }
    },    
    "MorganPPassword": {
      "type": "securestring",
      "defaultValue": "M0rg@N928!!@=",
      "metadata": {
        "description": "MorganP's password. By default it is 'M0rg@N928!!@='  MorganP is admin on IntWkst11 (but no other domain credentials)."
      }
    },    
    "MaureenGPassword": {
      "type": "securestring",
      "defaultValue": "3M4ureenG$#@",
      "metadata": {
        "description": "MaureenG's password. By default it is '3M4ureenG$#@'  MaureenG is admin on IntWkst12 (but no other domain credentials)."
      }
    },    
    "ShannaMPassword": {
      "type": "securestring",
      "defaultValue": "5$haNNhann32!!",
      "metadata": {
        "description": "ShannaM's password. By default it is '5$haNNhann32!!'  ShannaM is admin on IntWkst13 (but no other domain credentials)."
      }
    },    
    "MacaulyWPassword": {
      "type": "securestring",
      "defaultValue": "M@CC4ronni*#&",
      "metadata": {
        "description": "MacaulyW's password. By default it is 'M@CC4ronni*#&'  MacaulyW is admin on IntWkst14 (but no other domain credentials)."
      }
    },    
    "AngelTPassword": {
      "type": "securestring",
      "defaultValue": "4NGell900@#$%",
      "metadata": {
        "description": "AngelT's password. By default it is '4NGell900@#$%'  AngelT is admin on IntWkst15 (but no other domain credentials)."
      }
    },    
    "TonyaMPassword": {
      "type": "securestring",
      "defaultValue": "70NYAeah&$%^",
      "metadata": {
        "description": "TonyaM's password. By default it is '70NYAeah&$%^'  TonyaM is admin on IntWkst16 (but no other domain credentials)."
      }
    },    
    "ZaineOPassword": {
      "type": "securestring",
      "defaultValue": "In5an3*&Minbrain!",
      "metadata": {
        "description": "ZaineO's password. By default it is 'In5an3*&Minbrain!'  ZaineO is admin on IntWkst17 (but no other domain credentials)."
      }
    },    
    "JaxonRPassword": {
      "type": "securestring",
      "defaultValue": "Way2J4X%)N",
      "metadata": {
        "description": "JaxonR's password. By default it is 'Way2J4X%)N'  JaxonR is admin on IntWkst18 (but no other domain credentials)."
      }
    },    
    "OwainTPassword": {
      "type": "securestring",
      "defaultValue": "0Wn$!N556!",
      "metadata": {
        "description": "OwainT's password. By default it is '0Wn$!N556!'  OwainT is admin on IntWkst19 (but no other domain credentials)."
      }
    },    
    "KrishGPassword": {
      "type": "securestring",
      "defaultValue": "KrIS4$$as@@",
      "metadata": {
        "description": "KrishG's password. By default it is 'KrIS4$$as@@'  KrishG is admin on IntWkst20 (but no other domain credentials)."
      }
    },                                                                                     
    "AATPServicePassword": {
      "type": "securestring",
      "defaultValue": "Password123!@#",
      "metadata": {
        "description": "Password for the AATP Service ('AATPService').  This is an unprivileged user-account used for LDAP and SAMR purposes."
      }
    }
  },
  "variables": {
    "PrivateIpAddressesArray": {
      "type": "array",
      "Ip": [
        "10.0.24.4",
        "10.0.24.10",
        "10.0.24.11",
        "10.0.24.12",
        "10.0.24.13",
        "10.0.24.14",
        "10.0.24.15",
        "10.0.24.16",
        "10.0.24.17",
        "10.0.24.18",
        "10.0.24.19",
        "10.0.24.20",
        "10.0.24.21",
        "10.0.24.22",
        "10.0.24.23",
        "10.0.24.24",
        "10.0.24.25",
        "10.0.24.26",
        "10.0.24.27",
        "10.0.24.28",
        "10.0.24.29",
        "10.0.24.30",
        "10.0.24.31",
        "10.0.24.32",
        "10.0.24.33",
        "10.0.24.34",
        "10.0.24.50"
      ]
    },
    "NumberVmsNicStorage": 1,
    "NumberVmsSAscStorage": 5,
    "DeploymentVnetDnsName": "vNetDnsSettingsDeployment",
    "GithubBranch": "br22-dev/ihockett",
    "vNetAddressPrefix": "10.0.24.0/24",
    "vNetName": "DefendTheFlag-vNet",
    "vNetSubnetName": "Subnet",
    "vSubnetRefId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('vNetSubnetName'))]",
    "GenericNicName": "Nic",
    "GenericPublicIpAddressName": "PublicIp",
    "GenericStorageAccountName": "[concat(uniqueString(resourceGroup().id), 'sa')]",
    "LariatIP": "10.0.24.51",
    "DcVmName": "ContosoDc",
    "DcPromoteDcDscName": "DcPromoDsc",
    "DcDscUrl": "[concat('https://github.com/Circadence-Corp/DSREexpertBR/blob/', variables('GithubBranch'), '/DSC/ProvisionDcDsc.zip?raw=true')]",
    "AdminPcVmName": "AdminPc",
    "AdminPcDscName": "AdminPcDsc",
    "AdminPcDscUrl": "[concat('https://github.com/Circadence-Corp/DSREexpertBR/blob/', variables('GithubBranch'), '/DSC/ProvisionAdminPcDsc.zip?raw=true')]",
    "AdminPc2VmName": "AdminPc2",
    "AdminPc2DscName": "AdminPc2Dsc",
    "AdminPc2DscUrl": "[concat('https://github.com/Circadence-Corp/DSREexpertBR/blob/', variables('GithubBranch'), '/DSC/ProvisionAdminPc2Dsc.zip?raw=true')]",
    "Client01VmName": "Client01",
    "Client01DscName": "Client01Dsc",
    "Client01DscUrl": "[concat('https://github.com/Circadence-Corp/DSREexpertBR/blob/', variables('GithubBranch'), '/DSC/ProvisionClient01Dsc.zip?raw=true')]",
    "VictimPcVmName": "VictimPc",
    "VictimPcDscName": "VictimPcDsc",
    "VictimPcDscUrl": "[concat('https://github.com/Circadence-Corp/DSREexpertBR/blob/', variables('GithubBranch'), '/DSC/ProvisionVictimPcDsc.zip?raw=true')]",
    "AipDomainServiceAccount": "AipScanner",
    "AipDomainServiceAccountPassword": "Somepass1"
  },
  "resources": [
    {
      "apiVersion": "2018-12-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vNetSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('vNetAddressPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-02-01",
      "name": "[concat(variables('GenericStorageAccountName'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "count": "[variables('NumberVmsSAscStorage')]",
        "name": "GenericStorageAccountLoop"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
      }
    },
    {
      "apiVersion": "2018-12-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat('PublicIP', copyIndex())]",
      "location": "[resourceGroup().location]",            
      "copy": {
        "count": 1,
        "name": "GenericPublicIpAddressLoop"
      },
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2017-09-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "PublicNic0",
      "location": "[resourceGroup().location]",       
      "copy": {
        "name": "NicLoop",
        "count": 1
      },                 
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat('PublicIP', copyIndex()))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('GenericPublicIpAddressName'), copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('vSubnetRefId')]"
              }
            }
          }
        ]
      }
    },    
    {
      "apiVersion": "2017-09-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('GenericNicName'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "NicLoop",
        "count": "[variables('NumberVmsSAscStorage')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('PrivateIpAddressesArray').Ip[copyIndex('NicLoop')]]",
              "subnet": {
                "id": "[variables('vSubnetRefId')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('DeploymentVnetDnsName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('DcVmName'), variables('DcPromoteDcDscName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat('https://raw.githubusercontent.com/Circadence-Corp/DSREexpertBR/', variables('GithubBranch'), '/Nested/VNetConfiguration.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('vNetName')]"
          },
          "dnsServers": {
            "value": "[array(variables('PrivateIpAddressesArray').Ip[0])]"
          },
          "addressPrefix": {
            "value": "[variables('vNetAddressPrefix')]"
          },
          "subnets": {
            "value": [
              {
                "name": "[variables('vNetSubnetName')]",
                "properties": {
                  "addressPrefix": "[variables('vNetAddressPrefix')]"
                }
              }
            ]
          }
        }
      }
    },
    {      
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[variables('DcVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'), 0))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat('PublicNic', 0))]",
        "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('GenericStorageAccountName'),0))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "osProfile": {
          "computerName": "[variables('DcVmName')]",
          "adminUsername": "[parameters('builtinAdministratorAccount')]",
          "adminPassword": "[parameters('builtinAdministratorPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter-smalldisk",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('GenericStorageAccountName'), 0)]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "licenseType": "Windows_Server",
        "networkProfile": {
          "networkInterfaces": [            
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('PublicNic', 0))]",
              "properties" :{
              "primary":true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'), 0))]",
              "properties" :{
                "primary":false
                }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "resources": [
        {
          "apiVersion": "2018-10-01",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('DcVmName'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "[variables('DcPromoteDcDscName')]",
          "properties": {
            "autoUpgradeMinorVersion": true,
            "protectedSettings": {
              "configurationArguments": {
                "AdminCreds": {
                  "UserName": "[parameters('builtinAdministratorAccount')]",
                  "Password": "[parameters('builtinAdministratorPassword')]"
                },
                "JeffLCreds": {
                  "UserName": "JeffL",
                  "Password": "[parameters('JeffLPassword')]"
                },
                "SamiraACreds": {
                  "UserName": "SamiraA",
                  "Password": "[parameters('SamiraAPassword')]"
                },
                "RonHdCreds": {
                  "UserName": "RonHD",
                  "Password": "[parameters('RonHdPassword')]"
                },
                "LisaVCreds": {
                  "UserName": "LisaV",
                  "Password": "[parameters('LisaVPassword')]"
                },
                "ElsieMCreds": {
                  "UserName": "ElsieM",
                  "Password": "[parameters('ElsieMPassword')]"
                },                
                "KerriMCreds": {
                  "UserName": "KerriM",
                  "Password": "[parameters('KerriMPassword')]"
                },                
                "MuhammedOCreds": {
                  "UserName": "MuhammedO",
                  "Password": "[parameters('MuhammedOPassword')]"
                },                
                "YasminWCreds": {
                  "UserName": "YasminW",
                  "Password": "[parameters('YasminWPassword')]"
                },                
                "StefanMCreds": {
                  "UserName": "StefanM",
                  "Password": "[parameters('StefanMPassword')]"
                },                
                "PascalRCreds": {
                  "UserName": "PascalR",
                  "Password": "[parameters('PascalRPassword')]"
                },                
                "NolaMCreds": {
                  "UserName": "NolaM",
                  "Password": "[parameters('NolaMPassword')]"
                },                
                "RaifeDCreds": {
                  "UserName": "RaifeD",
                  "Password": "[parameters('RaifeDPassword')]"
                },                
                "LillianaDCreds": {
                  "UserName": "LillianaD",
                  "Password": "[parameters('LillianaDPassword')]"
                },                
                "KarinaMCreds": {
                  "UserName": "KarinaM",
                  "Password": "[parameters('KarinaMPassword')]"
                },                
                "MorganPCreds": {
                  "UserName": "MorganP",
                  "Password": "[parameters('MorganPPassword')]"
                },                
                "MaureenGCreds": {
                  "UserName": "MaureenG",
                  "Password": "[parameters('MaureenGPassword')]"
                },                
                "ShannaMCreds": {
                  "UserName": "ShannaM",
                  "Password": "[parameters('ShannaMPassword')]"
                },                
                "MacaulyWCreds": {
                  "UserName": "MacaulyW",
                  "Password": "[parameters('MacaulyWPassword')]"
                },                
                "AngelTCreds": {
                  "UserName": "AngelT",
                  "Password": "[parameters('AngelTPassword')]"
                },                
                "TonyaMCreds": {
                  "UserName": "TonyaM",
                  "Password": "[parameters('TonyaMPassword')]"
                },                
                "ZaineOCreds": {
                  "UserName": "ZaineO",
                  "Password": "[parameters('ZaineOPassword')]"
                },                
                "JaxonRCreds": {
                  "UserName": "JaxonR",
                  "Password": "[parameters('JaxonRPassword')]"
                },                
                "OwainTCreds": {
                  "UserName": "OwainT",
                  "Password": "[parameters('OwainTPassword')]"
                },                
                "KrishGCreds": {
                  "UserName": "KrishG",
                  "Password": "[parameters('KrishGPassword')]"
                },                
                "AipServiceCreds": {
                  "UserName": "[variables('AipDomainServiceAccount')]",
                  "Password": "[variables('AipDomainServiceAccountPassword')]"
                },
                "AatpServiceCreds": {
                  "UserName": "AATPService",
                  "Password": "[parameters('AATPServicePassword')]"
                }
              }
            },
            "publisher": "Microsoft.Powershell",
            "settings": {
              "configuration": {
                "url": "[variables('DcDscUrl')]",
                "script": "ProvisionDcDsc.ps1",
                "function": "CreateADForest"
              },
              "configurationArguments": {
                "DomainName": "[parameters('DomainName')]",
                "UserPrincipalName": "[parameters('UserPrincipalName')]",
                "NetBiosName": "[parameters('NetBiosName')]",
                "Branch": "[variables('GithubBranch')]"
              }
            },
            "type": "DSC",
            "typeHandlerVersion": "2.77"
          },
          "type": "extensions"
        }
      ]
    },   
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[variables('AdminPcVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'), 1))]",
        "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('GenericStorageAccountName'),1))]",
        "[resourceId('Microsoft.Resources/deployments', variables('DeploymentVnetDnsName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "osProfile": {
          "computerName": "[variables('AdminPcVmName')]",
          "adminUsername": "[parameters('builtinAdministratorAccount')]",
          "adminPassword": "[parameters('builtinAdministratorPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "microsoftwindowsdesktop",
            "offer": "office-365",
            "sku": "1903-evd-o365pp",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('GenericStorageAccountName'), 1)]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "licenseType": "Windows_Client",
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'), 1))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "resources": [
        {
          "type": "extensions",
          "apiVersion": "2018-10-01",
          "name": "[variables('AdminPcDscName')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('AdminPcVmName'))]",
            "[resourceId('Microsoft.Resources/deployments', variables('DeploymentVnetDnsName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "autoUpgradeMinorVersion": true,
            "typeHandlerVersion": "2.77",
            "settings": {
              "configuration": {
                "url": "[variables('AdminPcDscUrl')]",
                "script": "ProvisionAdminPcDsc.ps1",
                "function": "SetupAdminPc"
              },
              "configurationArguments": {
                "DomainName": "[parameters('DomainName')]",
                "NetBiosName": "[parameters('NetBiosName')]",
                "DnsServer": "[variables('PrivateIpAddressesArray').Ip[0]]",
                "Branch": "[variables('GithubBranch')]"
              }
            },
            "protectedSettings": {
              "configurationArguments": {
                "AdminCred": {
                  "UserName": "[parameters('builtinAdministratorAccount')]",
                  "Password": "[parameters('builtinAdministratorPassword')]"
                },
                "SamiraACred": {
                  "UserName": "SamiraA",
                  "Password": "[parameters('SamiraAPassword')]"
                },
                "AipServiceCred": {
                  "UserName": "[variables('AipDomainServiceAccount')]",
                  "Password": "[variables('AipDomainServiceAccountPassword')]"
                }
              }
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[variables('AdminPc2VmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'),2))]",
        "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('GenericStorageAccountName'),2))]",
        "[resourceId('Microsoft.Resources/deployments', variables('DeploymentVnetDnsName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "osProfile": {
          "computerName": "[variables('AdminPc2VmName')]",
          "adminUsername": "[parameters('builtinAdministratorAccount')]",
          "adminPassword": "[parameters('builtinAdministratorPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "microsoftwindowsdesktop",
            "offer": "office-365",
            "sku": "1903-evd-o365pp",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('GenericStorageAccountName'), 2)]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "licenseType": "Windows_Client",
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'), 2))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "resources": [
        {
          "type": "extensions",
          "apiVersion": "2018-10-01",
          "name": "[variables('AdminPc2DscName')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('AdminPc2VmName'))]",
            "[resourceId('Microsoft.Resources/deployments', variables('DeploymentVnetDnsName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "autoUpgradeMinorVersion": true,
            "typeHandlerVersion": "2.77",
            "settings": {
              "configuration": {
                "url": "[variables('AdminPc2DscUrl')]",
                "script": "ProvisionAdminPc2Dsc.ps1",
                "function": "SetupAdminPc2"
              },
              "configurationArguments": {
                "DomainName": "[parameters('DomainName')]",
                "NetBiosName": "[parameters('NetBiosName')]",
                "DnsServer": "[variables('PrivateIpAddressesArray').Ip[0]]",
                "Branch": "[variables('GithubBranch')]"
              }
            },
            "protectedSettings": {
              "configurationArguments": {
                "AdminCred": {
                  "UserName": "[parameters('builtinAdministratorAccount')]",
                  "Password": "[parameters('builtinAdministratorPassword')]"
                },
                "SamiraACred": {
                  "UserName": "SamiraA",
                  "Password": "[parameters('SamiraAPassword')]"
                },
                "AipServiceCred": {
                  "UserName": "[variables('AipDomainServiceAccount')]",
                  "Password": "[variables('AipDomainServiceAccountPassword')]"
                }
              }
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[variables('Client01VmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'), 3))]",
        "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('GenericStorageAccountName'),3))]",
        "[resourceId('Microsoft.Resources/deployments', variables('DeploymentVnetDnsName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "osProfile": {
          "computerName": "[variables('Client01VmName')]",
          "adminUsername": "[parameters('builtinAdministratorAccount')]",
          "adminPassword": "[parameters('builtinAdministratorPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "microsoftwindowsdesktop",
            "offer": "office-365",
            "sku": "1903-evd-o365pp",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('GenericStorageAccountName'), 3)]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "licenseType": "Windows_Client",
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'), 3))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "resources": [
        {
          "type": "extensions",
          "apiVersion": "2018-10-01",
          "name": "[variables('Client01DscName')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('Client01VmName'))]",
            "[resourceId('Microsoft.Resources/deployments', variables('DeploymentVnetDnsName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "autoUpgradeMinorVersion": true,
            "typeHandlerVersion": "2.77",
            "settings": {
              "configuration": {
                "url": "[variables('Client01DscUrl')]",
                "script": "ProvisionClient01Dsc.ps1",
                "function": "SetupClient01"
              },
              "configurationArguments": {
                "DomainName": "[parameters('DomainName')]",
                "NetBiosName": "[parameters('NetBiosName')]",
                "DnsServer": "[variables('PrivateIpAddressesArray').Ip[0]]",
                "Branch": "[variables('GithubBranch')]",
                "LariatIP": "[variables('LariatIP')]"
              }
            },
            "protectedSettings": {
              "configurationArguments": {
                "AdminCred": {
                  "UserName": "[parameters('builtinAdministratorAccount')]",
                  "Password": "[parameters('builtinAdministratorPassword')]"
                },
                "ElsieMCred": {
                  "UserName": "ElsieM",
                  "Password": "[parameters('ElsieMPassword')]"
                }
              }
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[variables('VictimPcVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'), 4))]",
        "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('GenericStorageAccountName'),4))]",
        "[resourceId('Microsoft.Resources/deployments', variables('DeploymentVnetDnsName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "osProfile": {
          "computerName": "[variables('VictimPcVmName')]",
          "adminUsername": "[parameters('builtinAdministratorAccount')]",
          "adminPassword": "[parameters('builtinAdministratorPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "microsoftwindowsdesktop",
            "offer": "office-365",
            "sku": "1903-evd-o365pp",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('GenericStorageAccountName'), 4)]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "licenseType": "Windows_Client",
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'), 4))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "resources": [
        {
          "type": "extensions",
          "apiVersion": "2018-10-01",
          "name": "[variables('VictimPcDscName')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('VictimPcVmName'))]",
            "[resourceId('Microsoft.Resources/deployments', variables('DeploymentVnetDnsName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "autoUpgradeMinorVersion": true,
            "typeHandlerVersion": "2.77",
            "settings": {
              "configuration": {
                "url": "[variables('VictimPcDscUrl')]",
                "script": "ProvisionVictimPcDsc.ps1",
                "function": "SetupVictimPc"
              },
              "configurationArguments": {
                "DomainName": "[parameters('DomainName')]",
                "NetBiosName": "[parameters('NetBiosName')]",
                "DnsServer": "[variables('PrivateIpAddressesArray').Ip[0]]",
                "Branch": "[variables('GithubBranch')]",
                "LariatIP": "[variables('LariatIP')]"
              }
            },
            "protectedSettings": {
              "configurationArguments": {
                "AdminCred": {
                  "UserName": "[parameters('builtinAdministratorAccount')]",
                  "Password": "[parameters('builtinAdministratorPassword')]"
                },
                "KerriMCred": {
                  "UserName": "KerriM",
                  "Password": "[parameters('KerriMPassword')]"
                }
              }
            }
          }
        }
      ]
    }
  ]
}
